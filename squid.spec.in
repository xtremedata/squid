#
# SPEC file for squid
#
# Copyright (C) 2015, XtremeData Inc
#
# Build: rm -f squid-5.0.4.tar.gz ; make clean && make rpm



%define name            @PACKAGE_TARNAME@
%define sname           %{name}
%define nname           %{name}

%define version         @PACKAGE_VERSION@
%define release         1xdi%{?dist}

Name:                   %{name}
Version:                %{version}
Release:                %{release}
Epoch:    		7

Summary:  		The Squid proxy caching server
Provides:               squid

Group:    		System Environment/Daemons
License:  		GPLv2+ and (LGPLv2+ and MIT and BSD and Public Domain)

# URL:                  http://xtremedatainc.com/ocf/doc/index.html
Source0:                %{name}-%{version}.tar.gz
Distribution:           CentOS
Packager:               Radoslaw Garbacz <radoslaw.garbacz@xtremedatainc.com>

#Buildroot: 		%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildRoot:              %(mktemp -ud %{_tmppath}/%{name}-%{version}-%{release}-XXXXXX)
Requires: bash >= 2.0
Requires: squid-migration-script
Requires(pre): shadow-utils
Requires(post): /sbin/chkconfig
Requires(preun): /sbin/chkconfig
Requires(post): systemd
Requires(preun): systemd
Requires(postun): systemd
# squid_ldap_auth and other LDAP helpers require OpenLDAP
BuildRequires: openldap-devel
# squid_pam_auth requires PAM development libs
BuildRequires: pam-devel
# SSL support requires OpenSSL
BuildRequires: openssl-devel
# squid_kerb_aut requires Kerberos development libs
BuildRequires: krb5-devel
# ESI support requires Expat & libxml2
BuildRequires: expat-devel libxml2-devel
# TPROXY requires libcap, and also increases security somewhat
BuildRequires: libcap-devel
# eCAP support
BuildRequires: libecap-devel >= 1.0.0
# 
BuildRequires: libtool libtool-ltdl-devel
# For test suite
BuildRequires: cppunit-devel
# DB helper requires
BuildRequires: perl-podlators libdb-devel
# c++ source files
BuildRequires: gcc-c++


#, python-psutil >= 2.2.1
#, python-boto >= 2.38.0


%description
This package contains dbX cluster management tools and configuration files.

The included tool is designed to manage dbX cluster locally and remotely. Also
certain functionality requires additional packages, not being depend on to make
remote management possible. Please be aware that depending on the installation
not all functionality might be available.


# --- ---- ---


%prep
%setup -q


%build
%ifarch sparcv9 sparc64 s390 s390x
   CXXFLAGS="$RPM_OPT_FLAGS -fPIE" \
   CFLAGS="$RPM_OPT_FLAGS -fPIE" \
%else
   CXXFLAGS="$RPM_OPT_FLAGS -fpie" \
   CFLAGS="$RPM_OPT_FLAGS -fpie" \
%endif
LDFLAGS="$RPM_LD_FLAGS -pie -Wl,-z,relro -Wl,-z,now"

autoreconf -f -i && %{configure} \
   --disable-strict-error-checking \
   --exec_prefix=/usr \
   --libexecdir=%{_libdir}/squid \
   --localstatedir=%{_var} \
   --datadir=%{_datadir}/squid \
   --sysconfdir=%{_sysconfdir}/squid \
   --with-logdir='$(localstatedir)/log/squid' \
   --with-pidfile='$(localstatedir)/run/squid.pid' \
   --disable-dependency-tracking \
   --enable-eui \
   --enable-follow-x-forwarded-for \
   --enable-auth \
   --enable-auth-basic="DB,LDAP,NCSA,NIS,PAM,POP3,RADIUS,SASL,SMB,SMB_LM,getpwnam" \
   --enable-auth-ntlm="fake" \
   --enable-auth-digest="file,LDAP,eDirectory" \
   --enable-auth-negotiate="kerberos" \
   --enable-external-acl-helpers="file_userip,LDAP_group,session,unix_group,wbinfo_group,kerberos_ldap_group" \
   --enable-cache-digests \
   --enable-cachemgr-hostname=localhost \
   --enable-delay-pools \
   --enable-epoll \
   --enable-ident-lookups \
   %ifnarch ppc64 ia64 x86_64 s390x aarch64
   --with-large-files \
   %endif
   --enable-linux-netfilter \
   --enable-removal-policies="heap,lru" \
   --enable-snmp \
   --enable-ssl-crtd \
   --enable-storeio="aufs,diskd,rock,ufs" \
   --enable-wccpv2 \
   --enable-esi \
   --enable-ecap \
   --with-aio \
   --with-default-user="squid" \
   --with-dl \
   --with-openssl \
   --with-pthreads \
   --disable-arch-native

make -j 1 all \
	DEFAULT_SWAP_DIR='$(localstatedir)/spool/squid' \
	%{?_smp_mflags}

%check
make check

%install
rm -rf %{buildroot}
#make DESTDIR=%{buildroot} install
%{make_install}

echo "
#
# This is %{_sysconfdir}/httpd/conf.d/squid.conf
#

ScriptAlias /Squid/cgi-bin/cachemgr.cgi %{_libdir}/squid/cachemgr.cgi

# Only allow access from localhost by default
<Location /Squid/cgi-bin/cachemgr.cgi>
 Require local
 # Add additional allowed hosts as needed
 # Require host example.com
</Location>" > %{buildroot}/squid.httpd.tmp


mkdir -p %{buildroot}%{_sysconfdir}/rc.d/init.d
mkdir -p %{buildroot}%{_sysconfdir}/logrotate.d
mkdir -p %{buildroot}%{_sysconfdir}/sysconfig
mkdir -p %{buildroot}%{_sysconfdir}/pam.d
mkdir -p %{buildroot}%{_sysconfdir}/httpd/conf.d/
mkdir -p %{buildroot}%{_sysconfdir}/NetworkManager/dispatcher.d
mkdir -p %{buildroot}%{_unitdir}
mkdir -p %{buildroot}%{_libexecdir}/squid
mkdir -p %{buildroot}%{_prefix}/lib/firewalld/services

##install -m 755 %{SOURCE2} %{buildroot}%{_sysconfdir}/rc.d/init.d/squid
##install -m 644 %{SOURCE3} %{buildroot}%{_sysconfdir}/logrotate.d/squid
##install -m 644 %{SOURCE4} %{buildroot}%{_sysconfdir}/sysconfig/squid
##install -m 644 %{SOURCE5} %{buildroot}%{_sysconfdir}/pam.d/squid
##install -m 644 %{SOURCE7} %{buildroot}%{_unitdir}
##install -m 755 %{SOURCE8} %{buildroot}%{_libexecdir}/squid
install -m 644 %{buildroot}/squid.httpd.tmp %{buildroot}%{_sysconfdir}/httpd/conf.d/squid.conf
##install -m 644 %{SOURCE6} %{buildroot}%{_sysconfdir}/NetworkManager/dispatcher.d/20-squid
mkdir -p %{buildroot}%{_var}/log/squid
mkdir -p %{buildroot}%{_var}/spool/squid
mkdir -p %{buildroot}%{_var}/run/squid
chmod 644 contrib/url-normalizer.pl contrib/user-agents.pl
iconv -f ISO88591 -t UTF8 ChangeLog -o ChangeLog.tmp
mv -f ChangeLog.tmp ChangeLog

# install /usr/lib/tmpfiles.d/squid.conf
mkdir -p %{buildroot}%{_tmpfilesdir}
cat > %{buildroot}%{_tmpfilesdir}/squid.conf <<EOF
# See tmpfiles.d(5) for details

d /run/squid 0755 squid squid - -
EOF

# Move the MIB definition to the proper place (and name)
mkdir -p %{buildroot}/usr/share/snmp/mibs
mv %{buildroot}/usr/share/squid/mib.txt %{buildroot}/usr/share/snmp/mibs/SQUID-MIB.txt

# squid.conf.documented is documentation. We ship that in doc/
rm -f %{buildroot}%{_sysconfdir}/squid/squid.conf.documented

# remove unpackaged files from the buildroot
rm -f %{buildroot}%{_bindir}/{RunAccel,RunCache}
rm -f %{buildroot}/squid.httpd.tmp

# bug #447156
# /usr/share/squid/errors/zh-cn and /usr/share/squid/errors/zh-tw were
# substituted directories substituted by symlinks and RPM, can't handle
# this change
rm -f %{buildroot}%{_prefix}/share/squid/errors/zh-tw
rm -f %{buildroot}%{_prefix}/share/squid/errors/zh-cn
#cp -R --preserve=all %{buildroot}%{_prefix}/share/squid/errors/zh-hant %{buildroot}%{_prefix}/share/squid/errors/zh-tw
#cp -R --preserve=all %{buildroot}%{_prefix}/share/squid/errors/zh-hans %{buildroot}%{_prefix}/share/squid/errors/zh-cn

# squid-migration-script
mkdir -p %{buildroot}%{_libexecdir}/squid
### install -m 755 %{SOURCE99} %{buildroot}%{_bindir}



%clean
rm -rf %{buildroot}



# -----------------------
# ---    Triggers     ---

%triggerin -- samba-common
if ! getent group wbpriv >/dev/null 2>&1 ; then
  /usr/sbin/groupadd -g 88 wbpriv >/dev/null 2>&1 || :
fi
/usr/sbin/usermod -a -G wbpriv squid >/dev/null 2>&1 || \
    chgrp squid /var/cache/samba/winbindd_privileged >/dev/null 2>&1 || :





# -----------------------
# - Transaction scriplets
# -----------------------


## Pre transaction
%pretrans
if id "%{xdcrm_user}" &> /dev/null; then
    service dbx status &> /dev/null;
    case "$?" in
        1|4)
            echo "dbX cluster is stopped (r:$?) - continuing" >&2;
            ;;
        *)
            echo "Cannot update dbX when the cluster is running (r:$?)" >&2;
            echo "Please shutdown using: 'xdc stop' and try again" >&2;
            exit 1;
            ;;
    esac;
fi;







# -----------------------
# ---    Scriplets    ---
# -----------------------



# Pre Installation
# %pre

# Post Installation
## %post

# Post Uninstallation
# %postun

%pre
if ! getent group squid >/dev/null 2>&1; then
  /usr/sbin/groupadd -g 23 squid
fi

if ! getent passwd squid >/dev/null 2>&1 ; then
  /usr/sbin/useradd -g 23 -u 23 -d /var/spool/squid -r -s /sbin/nologin squid >/dev/null 2>&1 || exit 1 
fi

for i in /var/log/squid /var/spool/squid ; do
        if [ -d $i ] ; then
                for adir in `find $i -maxdepth 0 \! -user squid`; do
                        chown -R squid:squid $adir
                done
        fi
done

%post
/usr/bin/squid-migrate-conf.py --write-changes --conf %{_sysconfdir}/squid/squid.conf &>/dev/null
%systemd_post squid.service

%preun
%systemd_preun squid.service

%postun
%systemd_postun_with_restart squid.service








# -----------------------
# ---    Files        ---
# -----------------------

# Installed files
%files
%defattr(-,root,root,-)
%doc COPYING README ChangeLog QUICKSTART src/squid.conf.documented
%doc contrib/url-normalizer.pl contrib/user-agents.pl

%{_unitdir}/squid.service
%attr(755,root,root) %dir %{_libexecdir}/squid
%attr(755,root,root) %{_libexecdir}/squid/cache_swap.sh
%attr(755,root,root) %dir %{_sysconfdir}/squid
%attr(755,root,root) %dir %{_libdir}/squid
%attr(750,squid,squid) %dir %{_var}/log/squid
%attr(750,squid,squid) %dir %{_var}/spool/squid
%attr(755,squid,squid) %dir %{_var}/run/squid

%config(noreplace) %attr(644,root,root) %{_sysconfdir}/httpd/conf.d/squid.conf
%config(noreplace) %attr(640,root,squid) %{_sysconfdir}/squid/squid.conf
%config(noreplace) %attr(644,root,squid) %{_sysconfdir}/squid/cachemgr.conf
%config(noreplace) %{_sysconfdir}/squid/mime.conf
%config(noreplace) %{_sysconfdir}/squid/errorpage.css
%config(noreplace) %{_sysconfdir}/sysconfig/squid

# These are not noreplace because they are just sample config files
%config %{_sysconfdir}/squid/squid.conf.default
%config %{_sysconfdir}/squid/mime.conf.default
%config %{_sysconfdir}/squid/errorpage.css.default
%config %{_sysconfdir}/squid/cachemgr.conf.default
%config(noreplace) %{_sysconfdir}/pam.d/squid
%config(noreplace) %{_sysconfdir}/logrotate.d/squid

%dir %{_datadir}/squid
%attr(-,root,root) %{_datadir}/squid/errors
%attr(755,root,root) %{_sysconfdir}/NetworkManager/dispatcher.d/20-squid
%{_datadir}/squid/icons
%{_sbindir}/squid
%{_bindir}/squidclient
%{_bindir}/purge
%{_mandir}/man8/*
%{_mandir}/man1/*
%{_libdir}/squid/*
%{_datadir}/snmp/mibs/SQUID-MIB.txt
%{_tmpfilesdir}/squid.conf





%changelog

